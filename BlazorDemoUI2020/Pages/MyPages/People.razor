@page "/MyPages/People"
@inject IPeopleData _db

<div class="text-center">
    <h1>People Page!</h1>
</div>

<h4>Insert New Person</h4>
<EditForm Model="@newPerson" OnValidSubmit="@InsertPersonAsync">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <InputText id="firstNama"    @bind-Value="newPerson.FirstName"></InputText>
    <InputText id="lastNama"     @bind-Value="newPerson.LastName"></InputText>
    <InputText id="emailAddress" @bind-Value="newPerson.EmailAddress"></InputText>

    <button type="submit" class="btn btn-primary">Save.</button>
</EditForm>
<hr />

<h4>Current People</h4>

@if (people is null)
{
    <p><em>Loading.....</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last  Name</th>
                <th>Email Address</th>
              
            </tr>
        </thead>
        <tbody>
            @foreach (var person in people)
            {
                <tr>
                    <td>@person.FirstName</td>
                    <td>@person.LastName</td>
                    <td>@person.EmailAddress</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {

    private List<PersonModel> people;
    private DisplayPersonModel newPerson = new DisplayPersonModel();

    protected override async Task OnInitializedAsync()
    {
        people = await _db.GetPeople();
    }

    private async Task InsertPersonAsync()
    {
        var person = new PersonModel 
        {
           FirstName = newPerson.FirstName,
           LastName = newPerson.LastName,
           EmailAddress = newPerson.EmailAddress,
        };

        await _db.InsertPerson(person);

        people.Add(person);

        //clear text
        newPerson = new DisplayPersonModel();
    }

}
